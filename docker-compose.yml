version: '3.4'


networks: 
  kafka_net:
    name: kafka_net

services:
  inventoryconsumer:
    image: ${DOCKER_REGISTRY-}inventoryconsumer
    container_name: InventoryConsumer
    build:
      context: .
      dockerfile: InventoryConsumer/Dockerfile
    depends_on: 
      - kafka
    networks: 
      - kafka_net
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - Kafka_BootstrapServers=kafka:29092
    ports:
     - ${EXPOSE_HTTP_CONTAINER_PORT1}:80
     - ${EXPOSE_HTTPS_CONTAINER_PORT1}:443


  inventoryproducer:
    image: ${DOCKER_REGISTRY-}inventoryproducer
    container_name: InventoryProducer
    build:
      context: .
      dockerfile: InventoryProducer/Dockerfile
    depends_on: 
      - kafka
    networks: 
      - kafka_net
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
      - Kafka_BootstrapServers=kafka:29092
    ports:
     - ${EXPOSE_HTTP_CONTAINER_PORT2}:80
     - ${EXPOSE_HTTPS_CONTAINER_PORT2}:443

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: Zookeeper
    networks: 
      - kafka_net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka
    container_name: Kafka
    networks: 
      - kafka_net
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
      - "9997:9997"
    expose:
      - '29092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: '1'
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

  kafka-ui: 
    image: provectuslabs/kafka-ui:latest
    container_name: KafkaUI
    networks: 
      - kafka_net
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: true

  
  init-kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: KafkaInit
    networks: 
      - kafka_net
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic ${TOPIC1} --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic ${TOPIC2} --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

