# version: '4'
# services:
#   zookeeper:
#     image: wurstmeister/zookeeper:latest
#     ports:
#       - "2181:2181"
#   kafka:
#     image: wurstmeister/kafka:latest
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_ADVERTISED_HOST_NAME: localhost
#       KAFKA_CREATE_TOPICS: "sampletopic:1:1"
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181


# version: '4'
# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.2.1
#     hostname: zookeeper
#     container_name: zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-server:7.2.1
#     hostname: kafka
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#       - "9997:9997"
#     environment:
#       KAFKA_CREATE_TOPICS: "sampletopic:1:1"

#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_JMX_PORT: 9997
#       KAFKA_JMX_HOSTNAME: kafka

#   kafka-ui:
#     container_name: kafka-ui
#     image: provectuslabs/kafka-ui:latest
#     ports:
#       - 8082:8080
#     environment:
#       DYNAMIC_CONFIG_ENABLED: true


#       version: '3.8'

version: '3.4'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  # reachable on 9092 from the host and on 29092 from inside docker compose
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    expose:
      - '29092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'

  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic ${TOPIC1} --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic ${TOPIC2} --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "

# services:
#   zookeeper:
#     image: confluentinc/cp-zookeeper:7.5.0
#     hostname: zookeeper
#     container_name: zookeeper
#     ports:
#       - "32181:32181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 32181
#       ZOOKEEPER_TICK_TIME: 2000

#   kafka:
#     image: confluentinc/cp-enterprise-kafka:7.5.0
#     hostname: kafka
#     container_name: kafka
#     depends_on:
#       - zookeeper
#     ports:
#       - "9092:9092"
#       - "29092:29092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:32181'
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#       KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
#       KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_JMX_PORT: 9101
#       KAFKA_JMX_HOSTNAME: localhost
#       CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
#       CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
#       CONFLUENT_METRICS_ENABLE: 'true'
#       CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

#   kafka-create-topics:
#     image: confluentinc/cp-enterprise-kafka:7.5.0
#     depends_on:
#       - kafka
#     hostname: kafka-create-topics
#     command: ["bash", "./create-topics.sh"]
#     working_dir: /scripts
#     volumes:
#       - ./scripts:/scripts
  
 